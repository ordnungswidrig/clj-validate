{"body":"A clojure library to validate data structures.\r\n\r\nLicensed under EPL 1.0\r\n\r\n\r\nSample Code (see also test)\r\n---------------------------\r\n\r\n    (defn jabba-validate [j]\r\n      ((v/all (v/in :name  (forbidden-name \"Jabba\"))\r\n        (v/in :numbers (v/all (v/all-in-coll v/positive)\r\n                          (v/applied count (v/is-equal 4) :count)))\r\n        (v/in :location (v/all (v/coll-contains :city)\r\n                           (v/in :planet (v/not-equal \"Tattoine\"))))\r\n        (v/in :foos\r\n            (v/all-in-coll \r\n             (v/all\r\n              (v/any (v/warn v/coll-contains :size) \r\n                   (v/warn v/coll-contains :length))\r\n              (v/in :name \r\n                  (v/warn v/applied count (v/less-than 2) :count)))))) j))\r\n\r\n\r\n\r\n    (def jabba-valid \r\n         {:name \"Dschabba the Hutt\"\r\n          :age 441\r\n          :numbers [1 2 3 1]\r\n          :location {:planet \"Endor\" :city \"Ewok home town\"}\r\n          :foos [{:name \"d\" :length 1} {:name \"a\" :size 5}]})\r\n\r\n    (jabba-validate jabba-valid) ;; -> nil\r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Clj-validate","google":"","tagline":"Simple clojure library to validate datastructures"}